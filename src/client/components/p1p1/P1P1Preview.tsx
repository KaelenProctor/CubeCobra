import React, { useCallback, useContext, useMemo, useState } from 'react';

import { XIcon } from '@primer/octicons-react';
import TimeAgo from 'react-timeago';

import UserContext from '../../contexts/UserContext';
import Button from '../base/Button';
import { Flexbox } from '../base/Layout';
import Link from '../base/Link';
import Text from '../base/Text';
import P1P1DeleteModal from '../modals/P1P1DeleteModal';
import withModal from '../WithModal';

const DeleteModalButton = withModal(Button, P1P1DeleteModal);

interface P1P1PreviewProps {
  pack: {
    id: string;
    date: number;
    createdBy: string;
    createdByUsername: string;
  };
  onDeleted?: (packId: string) => void;
  cubeOwner?: string;
}

const P1P1Preview: React.FC<P1P1PreviewProps> = ({ pack, onDeleted, cubeOwner }) => {
  const user = useContext(UserContext);
  const [isDeleting, setIsDeleting] = useState(false);
  
  
  const canEdit = useMemo(() => {
    if (!user) {
      return false;
    }

    // User can delete if they are the cube owner or the pack creator
    return user.id === cubeOwner || user.id === pack.createdBy;
  }, [user, pack, cubeOwner]);

  const handleDeleteStart = useCallback(() => {
    setIsDeleting(true);
  }, []);

  const handleDeleted = useCallback((packId: string) => {
    if (onDeleted) {
      onDeleted(packId);
    }
  }, [onDeleted]);

  const { date } = pack;

  // Get creator info directly from pack
  const creatorId = pack.createdBy;
  const creatorName = pack.createdByUsername;

  return (
    <div
      className={`block py-1 px-2 ${isDeleting ? 'opacity-30 cursor-not-allowed' : 'hover:bg-bg-active hover:cursor-pointer'}`}
      onClick={(e) => {
        // Don't navigate if clicking on a button or if currently deleting
        if ((e.target as HTMLElement).closest('button') || isDeleting) {
          e.preventDefault();
          e.stopPropagation();
          return;
        }
        
        window.location.href = `/tool/p1p1/${pack.id}`;
      }}
    >
      <Flexbox direction="row" className="my-1" justify="between">
        <Flexbox direction="col">
          <Text sm semibold className="truncate flex-grow">
            P1P1 Pack
          </Text>
          <Text sm className="truncate flex-grow text-text-secondary">
            {'Generated by '}
            <Link href={`/user/view/${creatorId}`}>{creatorName}</Link> <TimeAgo date={date} />
          </Text>
        </Flexbox>
        {canEdit && (
          <DeleteModalButton
            color="secondary"
            outline
            modalprops={{ 
              pack, 
              onDeleted: handleDeleted, 
              onDeleting: handleDeleteStart
            }}
            stopPropagation={true}
          >
            <XIcon size={16} className="mx-1" />
          </DeleteModalButton>
        )}
      </Flexbox>
    </div>
  );
};

export default P1P1Preview;